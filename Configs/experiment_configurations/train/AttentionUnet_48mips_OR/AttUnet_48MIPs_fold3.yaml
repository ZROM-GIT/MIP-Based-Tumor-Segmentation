# Resume training (optional) and log experiment (optional)
test: False
resume_training: False
checkpoint_to_resume_from: '/Checkpoints/...'
log_experiment: False
run_id: ''
log_temps: False

# Path to JSON file that holds all the dataset paths
json_path: 'Configs/json_datasets/num_of_mips_comparison/MIPs48/MIPs48_fold3.json'

# Saves paths
save_weights_path: 'Weights'
save_checkpoints_path: 'Checkpoints'
save_val_predictions_path: 'ValPredictions'

# Project & experiment details
project_name: 'PET'
experiment_name: 'AttentionUnet_48mips_original_fold3'
experiment_number: 3

#########################################################################################

# Constant values for yaml
input_name: &input_name
    'SUV_mips'
target_name: &target_name
    'SEG_mips'
num_of_mips: &num_of_mips
    48

#########################################################################################

# Training Parameters
device: 0  # Number of GPU (0/1) or 'cpu'
use_amp: False  # Always uses Scaler. Always False when not training on GPU
amp_dtype: float16  # torch.(float16/bfloat16)
use_gradient_clipping: False
use_scheduler: True
use_sliding_window_inference: [] # ['training', 'validation']
save_checkpoint_every_n: 50  # Save checkpoint every epoch number
save_checkpoint_when_val_improves: True  # True/False

# Hyperparameters
batch_size: 1
epochs: 200
shuffle_data: True
seed: 598484 # None for non-determinism

# Dataset type
dataset_arguments:
    dataset_type: Dataset  # CacheDataset for speed (more memory) / SmartCacheDataset for partial cached datasets

# Optimizer arguments
optimizer_arguments:
    optimizer: 'Adam'
    momentum: 0.9
    lr: 5e-4

# Gradient Clipping arguments
gradient_clipping_arguments:
    norm_type: 2
    max_norm: 1
    error_if_nonfinite: True
    foreach: True

# Loss function arguments
loss_function_arguments:
    loss_function_name: 'DiceLoss'
    include_background: False

# Learning Rate Scheduler
scheduler_arguments:
    scheduler: CyclicLR
    base_lr: 5e-6
    max_lr: 1e-4
    mode: triangular2
    step_size_up: 10
    step_size_down: 20
    gamma: 0.6
    cycle_momentum: false

# Model arguments
model_arguments:
    model_name: AttentionUnet
    in_channels: 1
    out_channels: 2
    spatial_dims: 3
    channels: [16, 32, 64, 128, 256]
    strides: [2, 2, 2, 2]
    kernel_size: 3
    up_kernel_size: 3

# Final activation (after model)
final_activation: 'softmax'

# Parameters for Sliding Window Inference
sliding_window_inference_params:
    roi_size: [0, 400, *num_of_mips]
    sw_batch_size: 4
    overlap: 0.5
    mode: 'gaussian'

# Metrics
metrics:
    DiceMetric:
        include_background: false
        get_not_nans: true
        ignore_empty: false
    HausdorffDistanceMetric: {}
metricForSaving: 'DiceMetric'

# Transforms
defaultTransforms:
    LoadImaged:
        keys:
            - *input_name
            - *target_name
        image_only: true
        ensure_channel_first: true
    ToTensord:
        keys:
            - *target_name
        dtype: 'long'
    onehot_bin:
        keys:
            - *target_name
        dim: 0
    DivisiblePadd:
        keys:
            - *input_name
            - *target_name
        k: 16
        method: 'symmetric'

trainTransforms: {}

valTransforms: {}

testTransforms: {}

# Utilities
sets: ['training', 'validation', 'test']
set2transforms:
    training: 'trainTransforms'
    validation: 'valTransforms'
    test: 'testTransforms'

# Inverse transforms
training_inverse_transforms:
    activation: False
    timing: 'pre' # pre / post metric calculation
    num_of_reverses: -1

validation_inverse_transforms:
    activation: False
    timing: 'pre' # pre / post metric calculation
    num_of_reverses: -1

test_inverse_transforms:
    activation: False
    timing: 'pre' # pre / post metric calculation
    num_of_reverses: -1
